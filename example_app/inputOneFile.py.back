import sqlite3 as lite
import sys
import glob
import os
import json
from nltk.tokenize import sent_tokenize
import shutil

insrtcmd1="SELECT id FROM crowdsourcing_question ORDER BY id DESC LIMIT 1"
insrtcmd2="SELECT id FROM crowdsourcing_survey ORDER BY id DESC LIMIT 1"
jsonfile=sys.argv[1]
imagefile=sys.argv[1].replace('jsons','images')[:-4]+"png"
print jsonfile,imagefile
if not os.path.exists(jsonfile) or not os.path.exists(imagefile):
	print "hurum!"
	sys.exit(1)
try:
	cont=json.load(open(jsonfile,"r"))
except:
	print "json could not be loaded"
 
try:
	con = lite.connect('dev.db')
	with con:
		cur = con.cursor()    
		#      insertcommand="7","4","q5","a807462c-4","q5","/home/szr163/b206201a-2.txt","1","4","char","1","null","null","1","0")';
     		# print "executing query number: "+contstr
		cur.execute(insrtcmd1)
		qid=cur.fetchone()[0]
		cur=con.cursor()
		cur.execute(insrtcmd2)
		survey_id=cur.fetchone()[0]
   		#qid,survey_id = cur.fetchone()
		#qidstr=str(qid+1)
		surveyid=str(survey_id+1)
		print "question id",qid,"survey_id",survey_id
		#insert info from 
		mentions=['mention_sentence_'+str(i)+": "+x for i,x in enumerate(sent_tokenize(cont['Mention'][0]))]
		captions=['mention_sentence_'+str(i)+": "+x for i,x in enumerate(sent_tokenize(cont['Caption']))]
		imagetexts=['imgtext_element_'+str(i)+": "+x['Text'] for i,x in enumerate(cont['ImageText'])]	
		tnm="crowdsourcing_question"
		#
		allquestions=imagetexts+captions+mentions
		options="dataset\nmetric\nmethods"
		#insert into survey table
		#slugvalue=jsonfile.split("/")[-1][:-5].replace(".","").replace("-","")
		slugvalue="figure"+surveyid
		insrtcmd='INSERT INTO '+"crowdsourcing_survey"+' VALUES("'+surveyid+'","'+slugvalue+'","'\
		+slugvalue+'","'+""+\
		'","'+""+'","'+""+'","'+'1'+'","'+'0'+'","'+'0'+'","'+'1'+'","'+"1"+'","'+'1'+'","'\
		+'2015-03-18 18:56:53'+'","'+'2015-03-18'+'","'+''+'","'+'1'+'","'+'0'+'","'+''+'","'+''+'","'+'2'+'","'+''+'","'+''+'","'\
		''+'")'
		#print insrtcmd
		cur.execute(insrtcmd)
		
		#input the figure
		cur=con.cursor() 
		index=0
		imgname=imagefile.split("/")[-1]
		insrtcmd='INSERT INTO '+tnm+' VALUES("'+str(qid+1)+'","'+surveyid+'","'+'question'+str(index)+'","'+''+\
		'","'+''+\
		'","'+'question'+str(index)+'","'+"<img src='/media/img/"+imgname+"'>"+'","'+""+'","'+'0'+'","'+str(index)\
		+'","'+'bool'+'","'+'1'+'","'+""+'","'+""+'","'\
		+'1'+'","'+'0'+'")'
		print insrtcmd
		cur.execute(insrtcmd)
		shutil.copy(imagefile,'/home/szr163/django-crowdsourcing-1/example_app/example_app/media/img/')
		#insrtcmd='INSERT INTO '+tnm+' VALUES('
		qid+=1
		for index,question in enumerate(allquestions):
			insrtcmd='INSERT INTO '+tnm+' VALUES("'+str(qid+1)+'","'+surveyid+'","'+'question'+str(index+1)+'","'+question+\
			'","'+"<p><b>"+question+"</b></p>"+\
			'","'+'question'+str(index+1)+'","'+""+'","'+""+'","'+'0'+'","'+str(index+1)+'","'+'select'+'","'+'1'+'","'+options+'","'+""+'","'\
			+'1'+'","'+'0'+'")'
			print insrtcmd
			qid+=1
			cur.execute(insrtcmd)
#tnm+="(id,survey_id,fieldname,question,label,help_text,required,order,option_type,numeric_is_int,options,map_icons,answer_is_public,use_as_filter)"		
except lite.Error, e:
	print "Error %s: "% e.args[0]
	sys.exit(1)


    
finally:
	if con:
		con.close()
	
'''
con = None
tnm="crowdsourcing_question"

filelist=[]

for r,d,f in os.walk("example_app/media/imgcxs/"):
    for files in f:
        if files.endswith(".jpeg"):
             filelist.append(files.split('.')[0])

qid=7;
sid="4"
counter=0;
#tnm+="(id,survey_id,fieldname,question,label,help_text,required,order,option_type,numeric_is_int,options,map_icons,answer_is_public,use_as_filter)"

print tnm
try:
    con = lite.connect('dev.db')
    with con:
     for fitem in filelist:
      #insert command start 
      insrtcmd='INSERT INTO '+tnm+' VALUES('

      #increment question id
      qid+=1
      idstr=str(qid)
      insrtcmd+='"'+idstr+'",'

      #surveyid is fixed
      insrtcmd+='"'+sid+'",'

      #field name is similar to qid
      counter+=1
      contstr=str(counter)
      insrtcmd+='"q'+contstr+'",'

      #question is the image file name, barring location (given in forms.py)
      insrtcmd+='"'+fitem+'",'

      #label is the field name
      insrtcmd+='"q'+contstr+'",'

      #help_text is the location of the caption file
      insrtcmd+='"/home/szr163/itagct/caption_'+fitem+'.txt",'
     
      #all questions need to be answered, required 1
      insrtcmd+='"'+'1'+'",'

      #order is same as counter
      insrtcmd+='"'+contstr+'",'

      #option_type is char
      insrtcmd+='"'+'char'+'",'

      #numeric_is_int=1
      insrtcmd+='"'+'1'+'",'

      #options are nothing, NA
      insrtcmd+='"'+'NA'+'",'

      #map_icons are nothing, NA
      insrtcmd+='"'+'NA'+'",'

      #answer_is_public=1
      insrtcmd+='"'+'1'+'",'
      
      #use_as_filter=0 : This is the end of insrtcmd
      insrtcmd+='"'+'0'+'")'
           
      cur = con.cursor()    
#      insertcommand="7","4","q5","a807462c-4","q5","/home/szr163/b206201a-2.txt","1","4","char","1","null","null","1","0")';
      print "executing query number: "+contstr
      cur.execute(insrtcmd)   
#      data = cur.fetchone()
    
    
except lite.Error, e:
    
    print "Error %s: "% e.args[0]
    sys.exit(1)
    



finally:
    
    if con:
        con.close()
'''

		
'''
		CREATE TABLE "crowdsourcing_survey" (
    "id" integer NOT NULL PRIMARY KEY,
    "title" varchar(80) NOT NULL,
    "slug" varchar(50) NOT NULL UNIQUE,
    "tease" text NOT NULL,
    "description" text NOT NULL,
    "thanks" text NOT NULL,
    "require_login" bool NOT NULL,
    "allow_multiple_submissions" bool NOT NULL,
    "moderate_submissions" bool NOT NULL,
    "allow_comments" bool NOT NULL,
    "allow_voting" bool NOT NULL,
    "archive_policy" integer NOT NULL,
    "starts_at" datetime NOT NULL,
    "survey_date" date,
    "ends_at" datetime,
    "has_script" bool NOT NULL,
    "is_published" bool NOT NULL,
    "email" varchar(255) NOT NULL,
    "sections_id" integer,
    "site_id" integer NOT NULL REFERENCES "django_site" ("id"),
    "flickr_group_id" varchar(60) NOT NULL,
    "flickr_group_name" varchar(255) NOT NULL,
    "default_report_id" integer,
    UNIQUE ("survey_date", "slug")
)
		'''

