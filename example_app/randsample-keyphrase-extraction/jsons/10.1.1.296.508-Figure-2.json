{"Caption":"Figure 2: Accuracy in detecting option types. Only includes recognized types. In-scope means the op- tion is used within the program being analyzed, not just in a library or external process. ","ImageText":[{"Text":"100","TextBB":[117.152,137.92,135.903,149.171],"Rotation":0},{"Text":"Percent","TextBB":[91.8078,197.956,103.058,235.445],"Rotation":3},{"Text":"of","TextBB":[91.8078,184.418,103.058,194.831],"Rotation":3},{"Text":"true","TextBB":[91.8078,161.854,103.058,181.292],"Rotation":3},{"Text":"total","TextBB":[91.8078,136.503,103.058,158.729],"Rotation":3},{"Text":"In-scope","TextBB":[268.15,92.8484,311.19,104.099],"Rotation":0},{"Text":"Found","TextBB":[279.238,107.155,311.19,118.405],"Rotation":0},{"Text":"False","TextBB":[263.612,121.461,290.001,132.712],"Rotation":0},{"Text":"Pos","TextBB":[293.126,121.461,311.19,132.712],"Rotation":0},{"Text":"80","TextBB":[123.402,166.116,135.903,177.367],"Rotation":0},{"Text":"60","TextBB":[123.402,194.381,135.903,205.632],"Rotation":0},{"Text":"40","TextBB":[123.402,222.577,135.903,233.828],"Rotation":0},{"Text":"20","TextBB":[123.402,250.773,135.903,262.024],"Rotation":0},{"Text":"0","TextBB":[129.653,278.969,135.903,290.219],"Rotation":0},{"Text":"e","TextBB":[335.181,310.38,346.432,315.186],"Rotation":1},{"Text":"Tim","TextBB":[324.762,292.333,341.569,310.38],"Rotation":1},{"Text":"t","TextBB":[321.57,315.792,332.82,318.802],"Rotation":1},{"Text":"un","TextBB":[315.319,304.967,329.695,315.792],"Rotation":1},{"Text":"Co","TextBB":[308.025,292.333,323.444,304.967],"Rotation":1},{"Text":"e","TextBB":[306.273,347.035,317.523,351.841],"Rotation":1},{"Text":"e","TextBB":[299.346,306.168,310.596,310.975],"Rotation":1},{"Text":"fac","TextBB":[298.641,333.817,314.748,347.035],"Rotation":1},{"Text":"Siz","TextBB":[291.358,292.333,307.821,306.168],"Rotation":1},{"Text":"Inter","TextBB":[286.841,313.378,307.81,333.817],"Rotation":1},{"Text":"t.","TextBB":[281.978,304.956,294.966,310.672],"Rotation":1},{"Text":"Ne","TextBB":[274.69,292.333,290.453,304.956],"Rotation":1},{"Text":"o","TextBB":[271.498,315.792,282.748,321.205],"Rotation":1},{"Text":"rtn","TextBB":[264.554,303.765,279.623,315.792],"Rotation":1},{"Text":"Po","TextBB":[257.953,292.333,272.679,303.765],"Rotation":1},{"Text":"e","TextBB":[248.236,304.371,259.486,309.178],"Rotation":1},{"Text":"Fil","TextBB":[241.286,292.333,257.749,304.371],"Rotation":1},{"Text":"ress","TextBB":[235.381,310.975,253.919,327.809],"Rotation":1},{"Text":"d","TextBB":[232.256,305.562,243.506,310.975],"Rotation":1},{"Text":"Ad","TextBB":[224.618,292.333,240.381,305.562],"Rotation":1},{"Text":"ial","TextBB":[220.101,313.378,235.864,324.204],"Rotation":1},{"Text":"e","TextBB":[218.471,339.544,229.722,344.35],"Rotation":1},{"Text":"ec","TextBB":[214.551,303.765,228.577,313.378],"Rotation":1},{"Text":"Sp","TextBB":[207.951,292.333,222.676,303.765],"Rotation":1},{"Text":"s","TextBB":[202.327,311.581,213.577,315.792],"Rotation":1},{"Text":"Nam","TextBB":[206.321,318.499,224.859,339.544],"Rotation":1},{"Text":"s","TextBB":[199.895,307.37,211.146,311.581],"Rotation":1},{"Text":"Cla","TextBB":[191.214,292.333,208.371,307.37],"Rotation":1},{"Text":"tion","TextBB":[185.653,311.57,203.504,328.415],"Rotation":1},{"Text":"c","TextBB":[182.878,306.764,194.128,311.57],"Rotation":1},{"Text":"Fra","TextBB":[174.546,292.333,191.353,306.764],"Rotation":1},{"Text":"lean","TextBB":[168.298,310.38,186.836,328.415],"Rotation":1},{"Text":"o","TextBB":[165.173,304.967,176.423,310.38],"Rotation":1},{"Text":"Bo","TextBB":[157.879,292.333,173.298,304.967],"Rotation":1}],"Mention":["to measure the effectiveness of type inference and option\nfinding separately.\nOverall, we succeed 80% of the time. There is substantial\nvariation in success rate by type. Figure 2 displays this\nvariance. False negatives are the gap between 100% and\nthe \u201CFound\u201D bar. False positives (where the analysis finds a\nwrong type) are labelled explicitly.\nThe types are ordered based on the primary means we\nused to recognize them. The first two, Boolean and frac-\ntional, are recognized primarily based on the return type\nof the configuration read call; 24% of options of these types\nwere recognized using called methods, our second technique.\nThe next several columns are recognized entirely by this sec-\nond technique. Time options, the last column, were found\nusing our second and third techniques. Just over 80% of\ntime options were detected by their use in arithmetic with\nknown clock values; the remaining 20% were found based on\ntheir use as arguments to API calls such as Sleep.\nOur analysis recognizes virtually all options whose values\nare Boolean, fractional or Java class names. It also does\nreasonably well for network addresses. Performance on files\nand port numbers is comparatively weak, for reasons dis-\ncussed below. In distinguishing times from other numeric\nparameters, we succeed approximately 90% of the time; er-\nrors are roughly symmetric between false positives and false\nnegatives. This imprecision accounted for 28% of misses.\nWe found few cases where documentation incorrectly de-\nscribed what an option did. We posit that developers add or\nremove options more frequently than they change the type\nof an existing option. Changing the meaning of an option\nwould likely break existing configurations, a major enough\nchange to trigger documentation changes. Mistakes in docu-\nmenting an option\u2019s type do sometimes occur, however. The\npeculiar option in Derby mentioned above where \u201Cfalse\u201D is\ntreated as true is an example.\n"],"Page":8,"Number":2,"Type":"Figure","CaptionBB":[73,392,407,449],"Height":1169,"Width":827,"DPI":100,"ImageBB":[89,85,362,353]}