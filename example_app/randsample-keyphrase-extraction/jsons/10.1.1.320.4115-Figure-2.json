{"Caption":"Figure 2. Examples of designs emphasizing hotkey mappings. (a) Traditional design. (b) Fading-out hotkey. (c) Hotkey menu      replacement. (d) Audio feedback. (e) System delay. (f) Disabled menu items. Refer to text for detailed description. ","ImageText":[],"Mention":["a. Traditional menus. Traditional menus display hotkeys \nnext to menu items. Sometimes, menu items also rapidly \nfade out after they are selected (Figure 2a). These designs \nonly weakly draw the hotkey to the user\u2019s attention. \n","b. Fading-out hotkey. In this technique, when the user \nclicks on a menu item, the menu closes and only the \ncommand's hotkey stays visible, but then it slowly fades out \n(Figure 2b). This is a slightly stronger feedback-based \napproach than the traditional menu.  \n","c. Hotkey menu replacement. A problem with the traditional \ntechnique is that users may not pay any attention to the \nright column of the menu where the hotkeys are displayed. \nWith this feedback-based approach, when the user hovers \nover a menu item, the hotkey is displayed in place of the \ncommand name (Figure 2c). This technique should increase \nthe user\u2019s visual exposure to hotkeys, as the hotkey will be \ndisplayed at the location where the user is focusing. \n"," d. Audio Feedback. This is another feedback-based \napproach, however the feedback is auditory. When the user \nclicks on a menu item, the menu closes and the item content \nis played using speech feedback (Figure 2d). Audio \nfeedback builds upon the idea that the visual channel is \noften already saturated. Both the command name and \nhotkey are played to keep the hotkey in context in echoic \nmemory. \n","e. System Delay. This is one of two cost-based techniques. \nWhen the user clicks on a menu item, the menu closes, the \nmouse cursor disappears, and a small progress bar appears \nwith the hotkey next to it (Figure 2e). After two seconds, \nthe progress bar diminishes, and the command is invoked. \nWhile this technique uses a cost-based approach, it also \nincreases hotkey exposure as a byproduct. We also found \nthat hiding the mouse cursor to be very effective at \ngrabbing the user's attention. \n","f. Disabled menu items. This is our other cost-based \napproach. The menu grays out all command names. When \nthe user clicks on a menu item, the command is not invoked \nand the shortcut briefly flashes (Figure 2f). This forces \nusers to use the hotkey, and our hope is that it will aid in \ntheir learning of the hotkey mappings. \n"],"Page":3,"Number":2,"Type":"Figure","CaptionBB":[92,947,757,975],"Height":1100,"Width":850,"DPI":100,"ImageBB":[67,778,782,933]}