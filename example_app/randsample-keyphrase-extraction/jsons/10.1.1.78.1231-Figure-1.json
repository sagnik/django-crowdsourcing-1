{"Caption":"Figure 1: This diagram shows an overview of our detection archi- tecture. We heuristically select candidate URLs and determine via execution in a virtual machine if the URL exhibits malicious behavior. ","ImageText":[{"Text":"Web","TextBB":[647.726,102.387,667.435,111.254],"Rotation":0},{"Text":"Page","TextBB":[670.1,102.387,692.483,111.254],"Rotation":0},{"Text":"Repository","TextBB":[647.197,113.57,693.009,122.437],"Rotation":0},{"Text":"MapReduce","TextBB":[644.263,163.697,695.941,172.564],"Rotation":0},{"Text":"Heuristical","TextBB":[614.171,174.881,658.909,183.748],"Rotation":0},{"Text":"URL","TextBB":[661.573,174.881,680.745,183.748],"Rotation":0},{"Text":"Extraction","TextBB":[683.41,174.881,726.03,183.748],"Rotation":0},{"Text":"URL","TextBB":[592.557,198.879,611.729,207.746],"Rotation":0},{"Text":"Virtual","TextBB":[496.478,208.86,523.645,217.727],"Rotation":0},{"Text":"Machine","TextBB":[526.31,208.86,562.536,217.727],"Rotation":0},{"Text":"Monitor","TextBB":[654.125,223.01,686.085,231.877],"Rotation":0},{"Text":"Execution","TextBB":[629.879,234.194,671.971,243.061],"Rotation":0},{"Text":"Analysis","TextBB":[674.636,234.194,710.325,243.061],"Rotation":0},{"Text":"Internet","TextBB":[513.259,228.439,545.765,237.306],"Rotation":0},{"Text":"Explorer","TextBB":[511.665,239.623,547.354,248.49],"Rotation":0},{"Text":"Result","TextBB":[581.436,264.35,608.603,273.217],"Rotation":0},{"Text":"Malicious","TextBB":[637.604,289.314,677.549,298.181],"Rotation":0},{"Text":"Page","TextBB":[680.214,289.314,702.597,298.181],"Rotation":0},{"Text":"Repository","TextBB":[647.197,300.497,693.009,309.364],"Rotation":0}],"Mention":["ior of the installed software but rather identify the mecha-\nnisms used to introduce the software into the system via the\nbrowser.\nOur automated analysis harnesses the fact that Google,\nas part of indexing the web, has the content of most web\npages already available for post-processing. We divide the\nanalysis into three phases: identification of candidate URLs,\nin-depth verification of URLs and aggregation of malicious\nURLs into site level ratings. An overview of this architecture\nis shown in Figure 1.\nIn first phase we employ MapReduce [5] to process all\nthe crawled web pages for properties indicative of exploits.\nMapReduce is a programming model that operates in two\nstages: the Map stage takes a sequence of key-value pairs\nas input and produces a sequence of intermediate key-value\npairs as output. The Reduce stage merges all intermediate\nvalues associated with the same intermediate key and out-\nputs the final sequence of key-value pairs. We use the Map\nstage to output the URL of an analyzed web page as key and\nall links to potential exploit URLs as values. In the simple\ncase, this involves parsing HTML and looking for elements\nknown to be malicious, for example, an iframe pointing to a\nhost known to distribute malware. This allows us to detect\nthe majority of malicious web pages. To detect pages that\ndo not fall in the previous categories, we examine the in-\nterpreted Javascript included on each web page. We detect\nmalicious pages based on abnormalities such as heavy obfus-\ncation commonly found as part of exploits; see Section 6.1\nfor more details. The Reduce stage simply discards all but\nthe first intermediate value. The MapReduce allows us to\nprune several billion URLs into a few million. We can fur-\nther reduce the resulting number of URLs by sampling on a\nper-site basis; implemented as another MapReduce.\nTo verify that a URL is really the cause of a web browser\nexploit, we instrument Internet Explorer in a virtual ma-\nchine. We then feed and ask it to navigate to each candidate\nURL. We record all HTTP fetches as well as state changes to\nthe virtual machine such as a new processes being started,\nregistry and file system changes. For each URL, we score the\nanalysis run by assigning individual scores to each recorded\ncomponent. For example, we classify each HTTP fetch us-\ning a number of different anti-virus engines. The total score\nfor a run is the sum of all individual scores. If we find that\n"],"Page":2,"Number":1,"Type":"Figure","CaptionBB":[438,327,772,369],"Height":1169,"Width":827,"DPI":100,"ImageBB":[478,83,740,328]}