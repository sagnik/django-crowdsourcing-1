{"Caption":"Figure 2. An XML document and a structure tree of the document ","ImageText":[{"Text":"people","TextBB":[215.591,297.504,255.921,306.299],"Rotation":0},{"Text":"person","TextBB":[212.902,331.117,253.232,339.913],"Rotation":0},{"Text":"name","TextBB":[127.524,367.42,154.408,376.215],"Rotation":0},{"Text":"address","TextBB":[210.885,366.075,257.885,374.871],"Rotation":0},{"Text":"age","TextBB":[317.104,366.075,337.264,374.871],"Rotation":0}],"Mention":["As an example, an XML document and a structure tree of\nthe document are shown in Figure 2.\nGiven two XML documents, we want to find out if the\ntwo documents are structurally similar irrespective of the\norder in which the elements appear in each document. Since\nthe structure of an XML document can be described as a\nstructure tree, a solution is to compare the respective struc-\nture trees of the two XML documents. However, an XML\n","The path set of the document shown in Figure 2, for in-\nstance, is: \u0000 people\/person\/name, people\/ person\/address,\npeople\/person\/age, people\/person, person\/name, per-\nson\/address, person\/age, people, person, name, address,\nage \u0001.\nFurthermore, to count for paths that appear more fre-\nquently, we further retrieve from each XML document the\nfrequency of each path.\nGiven the features of an XML document as a set of (path,\nfrequency), we can use standard set comparison techniques\nto find out if two documents are similar; the equality op-\neration between two paths is the standard case-insensitive\ncomparison of two strings. Informally, we call two XML\ndocuments similar if a large fraction of the paths in their\npath sets are the same. There are a number of ways of com-\nputing such an overlap including the Jaccard Coefficient or\nits extensions, the Dice Coefficient and the well-known Co-\nsine measure (see an information retrieval text such as [12]\nfor more details). Given the pair-wise similarity between\nall documents in the collection, a clustering algorithm can\nbe applied to group similar XML documents into clusters,\nwhere every cluster should ideally represent a set of XML\ndocuments that share the same DTD.\nGiven a document with \u0002 root paths, each of length \u0003,\nthere are \u0002\u0003 \u0000\u0003 \u0001 \u0002\u0003\u0004\u0004 possible subpaths. A similarity com-\nparison between two documents can be done within one\nscan of their path sets 4. With the path set size set to\n\u0002\u0003 \u0000\u0003 \u0001 \u0002\u0003\u0004\u0004, the time complexity in terms of the number\nof string comparisons for our approach is expected to be\n\u0005 \u0000\u0002\u0003\n\u0001\n\u0003, compared to \u0005 \u0000\u0002 \u0001 \u0003 \u0001 \u0003 or higher node comparisons\nreported for a tree edit distance computation.\n","For instance, people\/person\/name, people\/ person\/address,\nand people\/person\/age are the root paths of the XML docu-\nment shown in Figure 2.\nTo account for similar but not identical paths between\ntwo XML documents, we use in our comparisons not only\nthe root paths but also all subpaths of the root paths (i.e. a\nconsecutive sequence of tag names).\n"],"Page":3,"Number":2,"Type":"Figure","CaptionBB":[84,408,381,439],"Height":1100,"Width":850,"DPI":100,"ImageBB":[104,289,362,385]}