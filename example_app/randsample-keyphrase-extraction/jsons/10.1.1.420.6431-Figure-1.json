{"Caption":"Figure 1: Election Workflow. The core election work flow in Scantegrity is similar to an optical scan election: a software backend creates ballot images that are printed, used by voters, and scanned. The results are fed to the backend which creates the tally. The audit capacity is provided by 3 extra steps: (1) create the initial digital audit trail and audit a portion of it, (2) audit the ballots to ensure correctness when printing, and (3) audit the final tally. ","ImageText":[{"Text":"Core","TextBB":[450.995,116.606,468.44,124.655],"Rotation":0},{"Text":"Election","TextBB":[470.677,116.606,499.312,124.655],"Rotation":0},{"Text":"Workflow","TextBB":[501.55,116.606,534.497,124.655],"Rotation":0},{"Text":"Backend","TextBB":[165.508,141.474,208.272,153.698],"Rotation":0},{"Text":"Website","TextBB":[243.269,141.474,283.442,153.698],"Rotation":0},{"Text":"Backend","TextBB":[318.436,141.474,361.2,153.698],"Rotation":0},{"Text":"Printer","TextBB":[399.412,141.474,433.154,153.698],"Rotation":0},{"Text":"Voter","TextBB":[479.128,141.474,506.366,153.698],"Rotation":0},{"Text":"Scanner","TextBB":[548.619,141.474,589.804,153.698],"Rotation":0},{"Text":"Backend","TextBB":[624.292,141.474,667.055,153.698],"Rotation":0},{"Text":"Backend","TextBB":[394.9,191.504,437.664,203.728],"Rotation":0},{"Text":"Website","TextBB":[472.661,191.504,512.834,203.728],"Rotation":0},{"Text":"Website","TextBB":[549.125,191.504,589.298,203.728],"Rotation":0},{"Text":"Website","TextBB":[625.589,191.504,665.761,203.728],"Rotation":0}],"Mention":["The election required a cryptographic backend, a scan-\nner, and a website. These 3 components form the ba-\nsic election system and their interaction is described in\nFigure 1. In addition, Takoma Park required software to\nresolve write-in candidate selections and produce a for-\nmatted tally on election night.\nScantegrity protects against manipulation of election\nresults and maintains, but does not improve, the privacy\nproperties of optical scan voting systems that use se-\nrial numbers. To compromise voter privacy using Scant-\negrity features, an attacker must associate receipts to vot-\ners and determine what confirmation numbers are as-\nsociated to each candidate. This is similar to violat-\ning privacy by other means; for example, an attacker\ncould compromise the scanner and determine the order\nin which voters used the device, or examine physical\nrecords and associate serial numbers to voters. The scan-\nner and backend components protect voter privacy, but\nthe website and the write-in candidate resolver do not\nbecause they work with public information only.\nEach component is written in Java. We describe the\nimplementation and functions of each one in the follow-\ning sections.\n"],"Page":6,"Number":1,"Type":"Figure","CaptionBB":[98,243,750,307],"Height":1100,"Width":850,"DPI":100,"ImageBB":[155,108,694,220]}