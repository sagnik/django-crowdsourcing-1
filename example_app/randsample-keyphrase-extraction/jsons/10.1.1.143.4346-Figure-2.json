{"Caption":"Figure 2: Connectivity graph of our six-story test building (for clarity, basement and fourth floor are shown as shaded planes). Diagonal edges between floors are stairs; vertical edges elevators. The outgoing edges can be connected to an outdoor street graph. ","ImageText":[],"Mention":["Our tracking system is an extension of the approach intro-\nduced by Liao and colleagues, in which location is esti-\nmated on a spatial connectivity graph (Liao et al. 2003;\nLiao, Fox, & Kautz 2004). Outdoor graph edges correspond\nto streets or footpaths (for the U.S., such graphs are pub-\nlicly available on the web), and indoor edges correspond to\nhallways, staircases, elevators, etc. (see Fig. 2). The major\nadvantages of using a graph are its abilities to (1) bias mo-\ntion models, and (2) simplify sequential location estimates\ninto smooth trajectories.\nIn graph-based localization, the motion update step of the\nBayes filter moves a particle along an edge of the graph.\nWhen the particle reaches a vertex, it continues its motion\nalong a randomly-selected outgoing edge connected to that\nvertex. Motion updates and motion model learning are not\nthe focus of this paper, and we refer the reader to (Liao et al.\n2003; Liao, Fox, & Kautz 2004) for more information. The\nmeasurement likelihood is then computed from the sensor\nmodel described in the previous section. Since this model\nassumes a set of discrete locations, we discretize the edges\non the graph and estimate a Gaussian sensor model for each\ndiscrete bin.\n","Indoor localization This experiment demonstrates the\nability of our approach to accurately estimate locations in-\nside large buildings. The 7-floor test environment is rep-\nresented by the graph shown in Fig. 2. Indoor ground\ntruth was interpolated from a small set of pre-specified way-\npoints. When our subject reached one of these waypoints,\nhe pressed a button to correlate his location with the current\ntimestamp. These synchronization points were later used to\ngenerate ground truth location along the entirety of the trace.\nWe first learned a sparse initial sensor model from a data log\nannotated with ground truth location, and then used Lines 6\nand 7 of the algorithm shown in Table 1 with unlabeled data\nto learn a refined sensor model.\nThe top half of Table 2 shows localization accuracy of\nour model averaged over five test traces, each of which in-\ncluded multiple floor transitions via staircases. The left two\ncolumns provide the averages over the mean and median er-\nrors of the most likely location estimates during each run.\nThe right column gives the average error per particle. The er-\nrors in the \u201Cglobal\u201D row correspond to experiments in which\nthe initial location of the device was unknown. In these tests,\nthe particles typically converged to the correct location (and\nthe correct floor) after less than 15 seconds. The \u201Ctrack-\ning\u201D row shows results obtained when the first 15 seconds\nwere removed from the evaluations; that is, they show typi-\ncal tracking errors.\nThe bottom half of Table 2 shows the estimation ac-\ncuracy when using the sensor model introduced by (Hae-\nberlen et al. 2004). Here, the training data at each location\nwas used to estimate the mean and variance of a flat, non-\nhierarchical Gaussian sensor model. As can be seen, the ac-\ncuracy is lower, which is mostly due to the fact that the flat\n"],"Page":4,"Number":2,"Type":"Figure","CaptionBB":[73,271,406,327],"Height":1100,"Width":850,"DPI":100,"ImageBB":[99,74,379,267]}