{"Caption":"Figure 1: Example OBDDs for a ∨ (b ∧ c)","ImageText":[{"Text":"1","TextBB":[556.015,127.217,560.283,136.86],"Rotation":0},{"Text":"B","TextBB":[611.465,137.88,617.008,147.524],"Rotation":0},{"Text":"1","TextBB":[598.668,148.544,602.937,158.187],"Rotation":0},{"Text":"0","TextBB":[626.393,154.942,630.662,164.585],"Rotation":0},{"Text":"C","TextBB":[585.872,180.534,591.416,190.177],"Rotation":0},{"Text":"1","TextBB":[573.076,193.33,577.345,202.973],"Rotation":0},{"Text":"0","TextBB":[579.474,105.89,583.743,115.533],"Rotation":0},{"Text":"A","TextBB":[560.28,110.156,565.823,119.799],"Rotation":0},{"Text":"0","TextBB":[600.801,193.33,605.07,202.973],"Rotation":0},{"Text":"T","TextBB":[564.545,231.719,569.237,241.362],"Rotation":0},{"Text":"F","TextBB":[607.199,231.719,611.89,241.362],"Rotation":0},{"Text":"B","TextBB":[593.906,280.772,599.152,289.898],"Rotation":0},{"Text":"0","TextBB":[577.559,289.4,581.598,298.525],"Rotation":0},{"Text":"A","TextBB":[548.043,327.089,553.289,336.215],"Rotation":0},{"Text":"1","TextBB":[612.069,288.038,616.109,297.163],"Rotation":0},{"Text":"A","TextBB":[570.293,332.084,575.539,341.21],"Rotation":0},{"Text":"C","TextBB":[615.702,332.084,620.948,341.21],"Rotation":0},{"Text":"0","TextBB":[586.186,345.707,590.226,354.832],"Rotation":0},{"Text":"1","TextBB":[561.212,350.248,565.251,359.373],"Rotation":0},{"Text":"T","TextBB":[570.293,402.468,574.733,411.593],"Rotation":0},{"Text":"1","TextBB":[604.35,345.707,608.389,354.832],"Rotation":0},{"Text":"0","TextBB":[624.784,347.977,628.823,357.103],"Rotation":0},{"Text":"F","TextBB":[615.702,402.468,620.141,411.593],"Rotation":0}],"Mention":["Representation Ordered binary decision diagrams\n(OBDDs) [10] are a canonical-form representation\nfor boolean formulae where two restrictions are\nplaced on binary decision diagrams: the variables\nshould appear in the same order on every path from\nthe root to a terminal, and there should be no iso-\nmorphic subtrees or redundant vertices in the dia-\ngram. A binary decision diagram is a rooted, di-\nrected acyclic graph with two types of vertices: ter-\nminal and nonterminal. Each nonterminal vertex\nv is labeled by a variable var(v) and has two suc-\ncessors, low(v) and high(v). We call the edge con-\nnecting v to low(v) the 0-edge of v (since it is the\nedge taken if v = 0) and the edge connecting v to\nhigh(v) the 1-edge of v. Figure 1 gives an exam-\nple of OBDDs that represents the simple boolean\nformula a ∨ (b ∧ c). To test for satisfiability, we\nstart at the root node and test whether the vari-\nable at the root is true or false. If it is false, we\nfollow the 0-edge, and if it is true, we follow the 1-\nedge, and repeat this process. Eventually we reach\neither the T -node or the F -nodes (also called the\n1-node and 0-node respectively). If we reach the\nT -node, then the given assignment satisfies the for-\nmula, and if we reach the F -node, it does not satisfy\nthe formula. For example, applying the assignment\n〈a = false, b = true, c = false〉 to either of the\nOBDDs in Figure 1 tells us that the formula is not\nsatisfied. The figure also illustrates that multiple\nOBDDs can represent the same formula.\n"],"Page":3,"Number":1,"Type":"Figure","CaptionBB":[462,439,716,454],"Height":1100,"Width":850,"DPI":100,"ImageBB":[546,99,634,424]}