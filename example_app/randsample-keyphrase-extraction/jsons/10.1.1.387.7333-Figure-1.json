{"Caption":"Figure 1: Somniloquy augments the PC network inter- face with a low power secondary processor that runs an embedded OS and networking stack, network port filters and lightweight versions of certain applications (stubs). Shading indicates elements introduced by Somniloquy. ","ImageText":[{"Text":"Apps","TextBB":[474.059,120.455,496.788,130.393],"Rotation":0},{"Text":"Host","TextBB":[701.175,106.678,721.698,116.616],"Rotation":0},{"Text":"PC","TextBB":[724.232,106.678,738.036,116.616],"Rotation":0},{"Text":"Somniloquy","TextBB":[529.315,114.492,581.599,124.431],"Rotation":0},{"Text":"daemon","TextBB":[537.394,126.418,573.53,136.356],"Rotation":0},{"Text":"Operating","TextBB":[459.748,145.632,503.566,155.571],"Rotation":0},{"Text":"system,","TextBB":[505.99,145.632,540.426,155.571],"Rotation":0},{"Text":"including","TextBB":[542.961,145.632,582.554,155.571],"Rotation":0},{"Text":"networking","TextBB":[484.126,157.558,532.327,167.496],"Rotation":0},{"Text":"stack","TextBB":[534.752,157.558,558.146,167.496],"Rotation":0},{"Text":"Host","TextBB":[486.515,176.639,507.037,186.578],"Rotation":0},{"Text":"processor,","TextBB":[509.571,176.639,555.804,186.578],"Rotation":0},{"Text":"RAM,","TextBB":[472.074,188.565,496.701,198.503],"Rotation":0},{"Text":"peripherals,","TextBB":[499.504,188.565,551.828,198.503],"Rotation":0},{"Text":"etc.","TextBB":[554.233,188.565,570.383,198.503],"Rotation":0},{"Text":"Secondary","TextBB":[474.191,219.837,521.964,229.775],"Rotation":0},{"Text":"processor","TextBB":[524.279,219.837,568.276,229.775],"Rotation":0},{"Text":"Network","TextBB":[460.542,238.52,496.916,248.458],"Rotation":0},{"Text":"interface","TextBB":[499.639,238.52,538.03,248.458],"Rotation":0},{"Text":"hardware","TextBB":[540.455,238.52,581.888,248.458],"Rotation":0},{"Text":"Port","TextBB":[630.684,177.964,648.95,187.903],"Rotation":0},{"Text":"filters","TextBB":[651.485,177.964,675.406,187.903],"Rotation":0},{"Text":"Appln","TextBB":[694.686,172.002,720.227,181.94],"Rotation":0},{"Text":"stubs","TextBB":[695.481,183.928,719.402,193.866],"Rotation":0},{"Text":"Embedded","TextBB":[635.322,201.551,683.651,211.489],"Rotation":0},{"Text":"OS,","TextBB":[685.947,201.551,703.021,211.489],"Rotation":0},{"Text":"incl.","TextBB":[705.823,201.551,723.702,211.489],"Rotation":0},{"Text":"networking","TextBB":[642.477,213.476,690.677,223.415],"Rotation":0},{"Text":"stack","TextBB":[693.102,213.476,716.497,223.415],"Rotation":0},{"Text":"Embedded","TextBB":[642.345,232.557,690.675,242.496],"Rotation":0},{"Text":"CPU,","TextBB":[692.97,232.557,716.673,242.496],"Rotation":0},{"Text":"RAM,","TextBB":[655.195,244.483,679.822,254.421],"Rotation":0},{"Text":"flash","TextBB":[682.625,244.483,703.793,254.421],"Rotation":0}],"Mention":["We accomplish these goals by augmenting the PC\u2019s\nnetwork interface hardware with an always-on, low\npower embedded CPU, as shown in Figure 1. This sec-\nondary processor has a relatively small amount of mem-\nory and flash storage 2 which consumes much less power\nthan if it were sharing the larger disk and memory of the\nhost processor. It runs an embedded operating system\nwith a full TCP\/IP networking stack, such as embedded\nLinux or Windows CE. The flash storage is used as a\ntemporary buffer to store data before the data is trans-\nferred in a larger chunk to the PC. A larger flash on the\nsecondary processor allows the PC to sleep longer (Sec-\ntion 3.2. This architecture has a couple of useful prop-\nerties. First, it does not require any changes to the host\noperating system, and second, it can be incrementally de-\nployed on existing PCs using a peripheral network inter-\nface (Section 4).\n","as reported in Figure 6. For our Wired-1NIC prototype\nthe additional latency for the IM stub when using Som-\nniloquy is around seven seconds.\nTo evaluate the overhead of P2P file sharing using the\nBitTorrent stub on the gumstix, we initiated downloads\nusing a torrent from a remote website5 into the 2GB SD\ncard of the Wired-1NIC gumstix. We varied the mem-\nory cache available to the stub while conducting a single\ndownload, and then tested two simultaneous downloads.\nThe results in Table 5 show that the memory footprint of\nthe stub increases proportionally to the cache size as ex-\npected, while the processor utilization remains constant.\nWhen there are two simultaneous downloads, each in-\nstance of the stub uses memory proportional to its speci-\nfied 4MB cache.\nFinally, to evaluate the web-download stub on the\ngumstix we initiate download of a large (300MB) file\nfrom a local web server. We varied the throughput of\nthe downloads and measured the processor utilization\nand the memory consumption of the gumstix, and exper-\nimented with two simultaneous downloads. As shown in\nTable 6, the processor utilization increases as the down-\nload rate increases although the memory footprint for\neach download remains constant.\nThe above results show that using application stubs,\nwe can support fairly complex tasks and applications, in-\ncluding background web downloads and P2P file shar-\n"],"Page":2,"Number":1,"Type":"Figure","CaptionBB":[434,288,749,373],"Height":1100,"Width":850,"DPI":100,"ImageBB":[442,97,750,267]}