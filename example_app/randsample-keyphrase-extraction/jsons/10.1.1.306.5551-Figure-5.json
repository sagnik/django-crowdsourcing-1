{"Caption":"Figure 5: A scenario where multipath TCP might get \u2018trapped\u2019 into using a less desirable path. ","ImageText":[],"Mention":["It turns out there is another pitfall with COUPLED,\nwhich shows itself evenwhen all subflows have the same\nRTT. Consider the scenario in Fig. 5. Initially there are\ntwo single-path TCPs on each link, and one multipath\nTCP able to use both links. It should end up balancing\nitself evenly across the two links, since if it were uneven\nthen one link would be more congested than the other\nand COUPLED would shift some of its traffic onto the\nless congested. Suppose now that one of the flows on\nthe top link terminates, so the top link is less congested,\nhence the multipath TCP flow moves all its traffic onto\nthe top link. But then it is \u2018trapped\u2019: no matter how\nmuch extra congestion there is on the top link, the the\nmultipath TCP flow is not using the bottom link, so it\n","Competing-flows experiment. We repeated the exper-\niment, but now with competing single-path TCP flows\non each of the paths, as in Fig.14. In order to showcase\nour algorithm for RTT compensation we repeated the\nexperiment but replacing MPTCP first with EWTCP\nand then with COUPLED. The former does not have any\nRTT compensation built in, although the technique we\nused for MPTCP could be adapted. For the latter, we\ndo not know how to build in RTT compensation.\nFig.15 shows the total throughput obtained by each\nof the three flows over the course of 5 minutes, one plot\nfor each of the three multipath algorithms. The top half\n"],"Page":4,"Number":5,"Type":"Figure","CaptionBB":[112,159,395,190],"Height":1100,"Width":850,"DPI":100,"ImageBB":[128,80,380,147]}