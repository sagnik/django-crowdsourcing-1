{"Caption":"Figure 3. a) Branch termination detected. b) Branch termination not detected (internal point). ","ImageText":[{"Text":"a","TextBB":[509.772,708.203,515.999,719.411],"Rotation":0},{"Text":"b","TextBB":[645.501,708.203,652.425,719.411],"Rotation":0}],"Mention":["a-1 a-2 a-3 b c-1 c-2 c-3 d\nFigure 2. a) The same 3-D point cloud (a-1) is maped with LLE (a-2) and ISOMAP [23] (a-3). LLE increases the separation of protrusions\nlike legs and arms, unlike methods based on geodesic distances [6]. b) The number of neighborhoods affected by articulated motion is\nrelatively small. c) Stability of LLE under articulated motion. Different poses (c-1, c-2) of the same articulated body are mapped to the\nsame embedding (c-3). d) k-wise clustering (with k = 3). Areas of triangles defined by triads of points measure their collinearity.\n","a b\nFigure 3. a) Branch termination detected. b) Branch termination\nnot detected (internal point).\n","Boundary detection and number of clusters. The ge-\nometric qualities of LLE embeddings (Sec. 2) allow to es-\ntimate, at each time, instant the \u201Ccorrect\u201D number of clus-\nters (Fig. 3) by detecting protrusion boundaries [19]. Each\npoint of the embedded cloud is tested to decide whether or\nnot it is a branch termination by finding its nearest neigh-\nbors (within a threshold distance, plotted in green on Fig.\n3), and fitting a line to them (in blue). An embedded point\nis a branch termination iff all its neighbors, projected on\nthis line, lay on one side of the point\u2019s own projection (red\nsquare, Fig. 3-a). A branch termination is not detected when\nthe projection has neighbors on both sides (Fig. 3-b).\n","clustering the embedded cloud Y (t+ 1) (Fig. 4-d).\nTopology changes and merging\/splitting. Laplacian\nmethods like LLE are less sensitive to changes of the topol-\nogy of the moving body than geodesic-based embeddings\nlike ISOMAP (Fig. 2-a-3), as they compute only sets of\nweights inside local neighborhoods. However, those tran-\nsitions still have important effects on the embedded cloud.\nIn fact, in an unsupervised context where no prior knowl-\nedge on the body structure is available, there is no reason to\ntell apart adjacent body-parts: it is more sensible to fit the\nnumber of clusters to the mutated topology. The branch de-\ntection algorithm provides a tool to both initialize clustering\nand implement the necessary change in the number and the\nlocation of clusters when such a change occurs.\n","geodesic distances along the body, since new paths appear\naffecting the distance between all pairs of points in the orig-\ninal cloud. Fig. 13 compares the segmentation scores of\nmethods based on local and global distances in situations in\nwhich the topology of the body changes. Propagating clus-\nters in the LLE space exhibits superior results and robust-\nness, as the algorithm smoothly adapts to topology changes\nowing to the properties of the embedded cloud.\n","c-1 c-2\nFigure 13. Measuring the relative performances of local meth-\nods based on graph Laplacians (represented by LLE and Lapla-\ncian Eigenmaps), EM clustering, and global embeddings based\non geodesic distance (represented by ISOMAP) for sequences af-\nfected by topology changes. a-1, b-1) Solid - our method, dashed\nis dynamic EM and dash-dot is k-means in ISOMAP space. Some\nexamples of how the segmentation copes with topology transi-\ntions are given (a-2,3,4-\u201Cwake up\u201D, b-2,3,4-\u201Cclap\u201D). c-1,2 are the\nISOMAP clustering for the corresponding final frames.\n","a-1 a-2 a-3 b-1 b-2 b-3\nFigure 14. a-1,2,3) A sequence of voxel-sets capturing a counting hand in an augmented reality environment. b-1,2,3) Corresponding\nrough articulated model fitting based on clusters.\n"],"Page":3,"Number":3,"Type":"Figure","CaptionBB":[427,721,757,750],"Height":1100,"Width":850,"DPI":100,"ImageBB":[464,580,723,719]}