{"Caption":"Figure 3. Images and features of a rolled fingerprint at different stages of feature extraction algorithm. (a) Gray image, (b) Thin- ning image, (c) Ridges and minutiae (green: reliable minutiae, red: unreliable minutiae), (d) Orientation field and quality map (green: reliable blocks, red: unreliable blocks). ","ImageText":[{"Text":"(a)","TextBB":[164.831,221.464,177.116,231.603],"Rotation":0},{"Text":"(b)","TextBB":[308.943,221.464,321.855,231.603],"Rotation":0},{"Text":"(c)","TextBB":[164.831,380.551,177.116,390.691],"Rotation":0},{"Text":"(d)","TextBB":[308.943,380.551,321.855,390.691],"Rotation":0}],"Mention":["and postprocessing. In this work, Neurotechnology Verifin-\nger 4.2 SDK [2] has been used as a preprocessor. Due to the\npresence of handwritten characters and strokes on many fin-\ngerprints scanned from paper, like the rolled prints in SD4\nand SD27, Verifinger produces many false minutiae. There-\nfore, a postprocessing algorithm was developed to remove\nthese unreliable minutiae and ridges. The quality map is\ncreated based on the automatically extracted ridges. We\ndeveloped a minutiae validation algorithm to classify each\nminutia as spurious, reliable or unreliable. Ridges are also\nclassified as true ridges or false ridges by a ridge validation\nalgorithm. The results of the various processing steps are\nshown in Figure 3. In the following paragraphs, we will\ndescribe minutia validation, ridge validation, quality map\nconstruction and orientation field estimation.\n"],"Page":4,"Number":3,"Type":"Figure","CaptionBB":[79,396,409,470],"Height":1100,"Width":850,"DPI":100,"ImageBB":[104,79,391,392]}